---
- name: Check if the cli is already downloaded.
  ansible.builtin.stat:
    path: "{{ jenkins_jar_location }}"
  register: jenkins_cli

- block:
    # Handler for this would only be called at the end
    # of all the tasks, but ensuring that Jenkins is
    # running is needed at this point.
    - name: Ensure Jenkins is started and runs on startup.
      service: name=jenkins state=started enabled=yes

    - name: Wait for Jenkins to start up before proceeding.
      uri:
        url: "{{ __jenkins_complete_base_url }}/cli/"
        method: GET
        return_content: "yes"
        timeout: 5
        body_format: raw
        follow_redirects: "no"
        status_code: 200,403
      register: result
      until: (result.status == 403 or result.status == 200) and (result.content.find("Please wait while") == -1)
      retries: "{{ jenkins_connection_retries }}"
      delay: "{{ jenkins_connection_delay }}"
      changed_when: false
      check_mode: false
      become: false

    - name: Get the jenkins-cli jarfile from the Jenkins server.
      get_url:
        url: "{{ __jenkins_complete_base_url }}/jnlpJars/jenkins-cli.jar"
        dest: "{{ jenkins_jar_location }}"
      register: jarfile_get
      until: "'OK' in jarfile_get.msg or '304' in jarfile_get.msg or 'file already exists' in jarfile_get.msg"
      retries: 5
      delay: 10
      check_mode: false

    - name: Remove Jenkins security init scripts after first startup.
      file:
        path: "{{ jenkins_home }}/init.groovy.d/basic-security.groovy"
        state: absent
  when: not jenkins_cli.stat.exists
  become: true
